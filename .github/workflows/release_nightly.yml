name: Release Nightly

on:
#   schedule:
#     # 00:00 UTC+8 -> 16:00
#     - cron: "0 16 * * *"
  workflow_dispatch:

permissions:
  actions: write

jobs:
  check_repos:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - name: Check repositories for changes
        id: check
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Initialize changes flag
          changes_found=false
          
          # Check each repository for changes in the last 24 hours
          repos=(
            "tensorchord/pgvecto.rs"
            "tensorchord/VectorChord"
            "tensorchord/VectorChord-bm25"
            "tensorchord/pg_tokenizer.rs"
            "tensorchord/vechord"
          )
          
          for repo in "${repos[@]}"; do
            echo "Checking $repo for recent changes..."
            # Get the latest commit date in the last 24 hours
            latest_commit=$(gh api repos/$repo/commits --jq '.[0].commit.author.date' --header 'X-GitHub-Api-Version: 2022-11-28')
            
            # Check if we got a commit and if it's within the last 24 hours
            if [[ -n "$latest_commit" ]]; then
              commit_date=$(date -d "$latest_commit" +%s)
              now=$(date +%s)
              hours_ago=$((($now - $commit_date) / 3600))
              
              if [[ $hours_ago -le 24 ]]; then
                echo "Found changes in $repo in the last 24 hours"
                changes_found=true
                break
              fi
            fi
          done
          
          # Set output for future job
          echo "has_changes=$changes_found" >> $GITHUB_OUTPUT
          echo "Changes found: $changes_found"

  trigger:
    needs: check_repos
    if: ${{ needs.check_repos.outputs.has_changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Trigger
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh workflow run release.yml -f version=$(TZ='Asia/Shanghai' date +"0.0.0-nightly.%Y%m%d") -f tag=v0.0.0-nightly